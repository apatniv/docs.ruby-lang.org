---
- hosts: default,docs-2020
  become: yes
  gather_facts: no
  vars:
    ansible_python_interpreter: '/usr/bin/python'
  tasks:
  - name: 'Setup groonga-apt-source' # https://groonga.org/ja/docs/install/debian.html
    apt:
      deb: 'https://packages.groonga.org/debian/groonga-apt-source-latest-buster.deb'
  - name: 'Setup packages'
    apt:
      name:
      # for setup
      - nginx
      - git
      - bundler
      - apt-transport-https
      - ca-certificates
      - curl
      - lv
      - rsync
      - snapd
      # for convenience
      - etckeeper
      - w3m
      # groonga
      - groonga
      - libgroonga-dev
  - name: 'Install snap ruby'
    snap:
      name: ruby
      classic: yes

  # https://www.phusionpassenger.com/docs/advanced_guides/install_and_upgrade/nginx/install/oss/buster.html
  - name: 'Add apt key of Passenger packages'
    apt_key:
      keyserver: keyserver.ubuntu.com
      id: 561F9B9CAC40B2F7
  - name: 'Add Passenger repository'
    apt_repository:
      repo: 'deb https://oss-binaries.phusionpassenger.com/apt/passenger buster main'
  - name: 'Install passenger'
    apt:
      name: libnginx-mod-http-passenger

  - name: 'User rurema'
    user:
      name: 'rurema'
      create_home: yes
      shell: '/bin/bash'
      groups: 'sudo'
      append: yes
  - name: 'Copy .ssh'
    copy:
      remote_src: yes
      src: '/home/vagrant/.ssh'
      dest: '/home/rurema'
      owner: 'rurema'
      group: 'rurema'
      mode: 'preserve'
    when: inventory_hostname == 'default'
  - name: 'Copy .ssh'
    copy:
      remote_src: yes
      src: '/home/admin/.ssh'
      dest: '/home/rurema'
      owner: 'rurema'
      group: 'rurema'
      mode: 'preserve'
    # copy first time only
    when: no # inventory_hostname == 'docs-2020'

  - name: 'Create directories'
    file:
      path: '{{ item }}'
      state: directory
      owner: 'rurema'
      group: 'rurema'
    with_items:
    - '/var/www/docs.ruby-lang.org'
    - '/var/rubydoc'
    - '/var/rubydoc/rurema-search/shared'

  - name: 'Copy systemd unit files'
    copy:
      dest: '/etc/systemd/system/{{ item }}'
      src: 'systemd/{{ item }}'
    with_items:
    - 'prepend-snap-path'
    - 'env-clear-before-replace.rb'
    - 'update-docs-en.timer'
    - 'rdoc-static-all.service'
    - 'update-docs-ja.timer'
    - 'bc-setup-all.service'
    - 'bc-static-all.path'
    - 'bc-static-all.service'
    - 'update-rurema-index.path'
    - 'update-rurema-index.service'
    - 'notify-to-slack@.service'
    notify: 'systemd daemon-reload'
  - name: 'Copy systemd unit related files'
    copy:
      dest: '/usr/local/bin/{{ item }}'
      src: 'systemd/{{ item }}'
      mode: '0755'
    with_items:
    - 'notify-to-slack.rb'
  - name: 'Enable systemd units'
    systemd:
      name: '{{ item }}'
      state: started
      enabled: yes
    with_items:
    - 'update-docs-en.timer'
    - 'update-docs-ja.timer'
    - 'bc-static-all.path'
    - 'update-rurema-index.path'
    notify: 'systemd daemon-reload'

  - name: 'Copy tmpfiles.d/docs.ruby-lang.org.conf'
    copy:
      dest: '/etc/tmpfiles.d/docs.ruby-lang.org.conf'
      content: |
        d /run/docs.ruby-lang.org 0755 rurema rurema
    notify: 'systemd-tmpfiles'

  - name: 'git clone rurema/doctree'
    git:
      repo: 'https://github.com/rurema/doctree.git'
      dest: '/var/rubydoc/doctree'
      depth: 1
    become: yes
    become_user: 'rurema'
    vars:
      ansible_ssh_pipelining: yes

  - name: 'Copy nginx site'
    copy:
      src: '../conf/docs.ruby-lang.org'
      dest: '/etc/nginx/sites-available/docs.ruby-lang.org'
  - name: 'Copy vagrant nginx site'
    copy:
      remote_src: yes
      src: '/etc/nginx/sites-available/docs.ruby-lang.org'
      dest: '/etc/nginx/sites-available/docs.ruby-lang.org.vagrant'
    when: docs_https_port is defined
    changed_when: no
  - name: 'Change port in vagrant nginx site'
    lineinfile:
      path: '/etc/nginx/sites-available/docs.ruby-lang.org.vagrant'
      regexp: '^(.*)proxy_set_header X-Forwarded-Port 443;$'
      line: '\1proxy_set_header X-Forwarded-Port {{ docs_https_port }};'
      backrefs: yes
    when: docs_https_port is defined
    changed_when: no
  - name: 'Enable docs.ruby-lang.org site'
    file:
      src: '../sites-available/docs.ruby-lang.org'
      dest: '/etc/nginx/sites-enabled/docs.ruby-lang.org'
      state: link
    when: docs_https_port is not defined
  - name: 'Enable docs.ruby-lang.org vagrant site'
    file:
      src: '../sites-available/docs.ruby-lang.org.vagrant'
      dest: '/etc/nginx/sites-enabled/docs.ruby-lang.org'
      state: link
    when: docs_https_port is defined
  - name: 'Disable default site'
    file:
      dest: '/etc/nginx/sites-enabled/default'
      state: absent

  handlers:
  - name: 'systemd daemon-reload'
    systemd:
      daemon_reload: yes
  - name: 'systemd-tmpfiles'
    command: '/bin/systemd-tmpfiles --create --remove'
